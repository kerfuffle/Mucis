package net.kerfuffle.Utilities.Network;

import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class TCPFileReceive implements Runnable{

	private Thread t;
	private volatile boolean running = false;
	private String path;
	private int fileSize = -1;
	private int port = 25586;

	public TCPFileReceive(String name, String path, int fileSize)
	{
		this.path = path+"/"+name;
		this.fileSize = fileSize;
	}

	public void start()
	{
		running = true;
		t = new Thread(this, "Receiving: " + path);
		t.start();
	}

	public void run()
	{
		while (running)
		{
			ServerSocket serverSocket = null;

			Socket socket = null;
			InputStream in = null;
			OutputStream out = null;

			try {
				serverSocket = new ServerSocket(4444);

				socket = serverSocket.accept();
				in = socket.getInputStream();
				out = new FileOutputStream(path);

				byte[] bytes = new byte[fileSize];

				int count;
				while ((count = in.read(bytes)) > 0) {
					out.write(bytes, 0, count);
				}

				out.close();
				in.close();
				socket.close();
				serverSocket.close();
			} 
			catch (IOException e) 
			{
				e.printStackTrace();
			}


		}
	}




	public void close()
	{
		running = false;
	}
}
